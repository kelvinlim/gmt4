/*
 * TaskFlow API
 *
 * This API is for interacting with the TaskFlow system. All core operations are handled through this API.
 *
 * The version of the OpenAPI document: v2.0
 * Contact: soude017@umn.edu
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing SessionTypesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SessionTypesApiTests : IDisposable
    {
        private SessionTypesApi instance;

        public SessionTypesApiTests()
        {
            instance = new SessionTypesApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SessionTypesApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SessionTypesApi
            //Assert.IsType<SessionTypesApi>(instance);
        }

        /// <summary>
        /// Test Delete
        /// </summary>
        [Fact]
        public void DeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string populationId = null;
            //instance.Delete(id, populationId);
        }

        /// <summary>
        /// Test Get
        /// </summary>
        [Fact]
        public void GetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int populationId = null;
            //var response = instance.Get(populationId);
            //Assert.IsType<List<SessionType>>(response);
        }

        /// <summary>
        /// Test GetSessionType
        /// </summary>
        [Fact]
        public void GetSessionTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string populationId = null;
            //var response = instance.GetSessionType(id, populationId);
            //Assert.IsType<SessionType>(response);
        }

        /// <summary>
        /// Test Post
        /// </summary>
        [Fact]
        public void PostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string populationId = null;
            //SessionType sessionType = null;
            //var response = instance.Post(populationId, sessionType);
            //Assert.IsType<SessionType>(response);
        }

        /// <summary>
        /// Test Put
        /// </summary>
        [Fact]
        public void PutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int id = null;
            //string populationId = null;
            //SessionType sessionType = null;
            //instance.Put(id, populationId, sessionType);
        }
    }
}
